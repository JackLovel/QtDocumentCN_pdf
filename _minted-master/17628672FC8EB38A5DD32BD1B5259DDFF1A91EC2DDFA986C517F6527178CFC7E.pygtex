\begin{Verbatim}[commandchars=\\\{\}]
\PYG{n}{QGraphicsScene}\PYG{+w}{ }\PYG{n}{scene}\PYG{p}{;}
\PYG{c+c1}{// … 初始化场景}
\PYG{n}{foreach}\PYG{+w}{ }\PYG{p}{(}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{QGraphicsItem}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{item}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{scene}\PYG{p}{.}\PYG{n}{items}\PYG{p}{())}\PYG{+w}{ }\PYG{p}{\PYGZob{}}
\PYG{+w}{	}\PYG{n}{item}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{setPos}\PYG{p}{(}\PYG{n}{qrand}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m+mi}{500}\PYG{p}{,}\PYG{+w}{ }\PYG{n}{qrand}\PYG{p}{()}\PYG{+w}{ }\PYG{o}{\PYGZpc{}}\PYG{+w}{ }\PYG{l+m+mi}{500}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// 无法编译！item 是 const 指针}
\PYG{p}{\PYGZcb{}}
\PYG{err}{\PYGZbs{}}\PYG{n}{end}\PYG{p}{\PYGZob{}}\PYG{n}{lstlisting}\PYG{p}{\PYGZcb{}}

\PYG{n}{QGraphicsScene}\PYG{o}{::}\PYG{n}{items}\PYG{p}{()}\PYG{+w}{ }\PYG{n}{是}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{成员函数}\PYG{err}{，}\PYG{n}{这可能会让人觉得应该返回}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{指针}\PYG{err}{。}

\PYG{n}{在}\PYG{+w}{ }\PYG{n}{Qt}\PYG{+w}{ }\PYG{n}{中}\PYG{err}{，}\PYG{n}{我们近乎只使用非}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{的模式}\PYG{err}{。}\PYG{n}{我们选择了实用主义之路}\PYG{err}{：}\PYG{n}{返回}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{指针更容易导致}\PYG{+w}{ }\PYG{k}{const}\PYG{err}{\PYGZbs{}}\PYG{n}{\PYGZus{}cast}\PYG{+w}{ }\PYG{n}{的过度使用}\PYG{err}{，}\PYG{n}{这比滥用返回的非}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{指针引发的问题更加频繁}\PYG{err}{。}

\PYG{n}{返回类型}\PYG{err}{：}\PYG{n}{值}\PYG{+w}{ }\PYG{n}{或}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{引用}\PYG{err}{？}

\PYG{n}{如果我们在返回对象时还保留了它的副本}\PYG{err}{，}\PYG{n}{返回}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{引用是最快的方法}\PYG{err}{；}\PYG{n}{然而}\PYG{err}{，}\PYG{n}{这在我们之后打算重构这个类时成为了限制}\PYG{err}{（}\PYG{n}{使用}\PYG{+w}{ }\PYG{n}{d}\PYG{+w}{ }\PYG{n}{指针惯用法}\PYG{err}{，}\PYG{n}{我们可以在任何时候修改}\PYG{+w}{ }\PYG{n}{Qt}\PYG{+w}{ }\PYG{n}{类的内存结构}\PYG{err}{；}\PYG{n}{但我们无法在不破坏二进制兼容性的前提下}\PYG{err}{，}\PYG{n}{将函数签名从}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{QFoo}\PYG{err}{\PYGZbs{}}\PYG{o}{\PYGZam{}}\PYG{+w}{ }\PYG{n}{改为}\PYG{+w}{ }\PYG{n}{QFoo}\PYG{err}{）。}\PYG{n}{出于此原因}\PYG{err}{，}\PYG{n}{我们通常返回}\PYG{+w}{ }\PYG{n}{QFoo}\PYG{+w}{ }\PYG{n}{而非}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{QFoo}\PYG{err}{\PYGZbs{}}\PYG{o}{\PYGZam{}}\PYG{err}{，}\PYG{n}{除了性能极端敏感}\PYG{err}{，}\PYG{n}{而重构并不是问题的少数场合}\PYG{err}{（}\PYG{n}{例如}\PYG{+w}{ }\PYG{n}{QList}\PYG{o}{::}\PYG{n}{at}\PYG{p}{()}\PYG{err}{）。}

\PYG{k}{const}\PYG{+w}{ }\PYG{n}{与}\PYG{+w}{ }\PYG{n}{对象的状态}

\PYG{n}{const正确性}\PYG{+w}{ }\PYG{n}{是}\PYG{+w}{ }\PYG{n}{C}\PYG{+w}{ }\PYG{n}{中的一场}\PYG{err}{“}\PYG{n}{圣战}\PYG{err}{”（}\PYG{n}{译者注}\PYG{err}{：}\PYG{n}{原文为}\PYG{+w}{ }\PYG{n}{vi}\PYG{o}{\PYGZhy{}}\PYG{n}{emacs}\PYG{+w}{ }\PYG{n}{discussion}\PYG{err}{），}\PYG{n}{因为该原则在一些领域}\PYG{err}{（}\PYG{n}{如基于指针的函数}\PYG{err}{）}\PYG{n}{中是失效了}\PYG{err}{。}

\PYG{n}{但}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{成员函数的常规含义是值不会修改一个类对外可见的状态}\PYG{err}{，}\PYG{n}{状态在此处值}\PYG{err}{“}\PYG{n}{我自己的和我负责的}\PYG{err}{”。}\PYG{n}{这并不意味着}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{成员函数会改变它们自己的私有成员变量}\PYG{err}{，}\PYG{n}{但也不代表不能这么做}\PYG{err}{。}\PYG{n}{但通常来说}\PYG{err}{，}\PYG{k}{const}\PYG{+w}{ }\PYG{n}{成员函数不会产生可见的副作用}\PYG{err}{。}\PYG{n}{例如}\PYG{err}{：}

\PYG{err}{\PYGZbs{}}\PYG{n}{begin}\PYG{p}{\PYGZob{}}\PYG{n}{lstlisting}\PYG{p}{\PYGZcb{}[}\PYG{n}{language}\PYG{o}{=}\PYG{n}{C}\PYG{o}{++}\PYG{p}{]}
\PYG{n}{QSize}\PYG{+w}{ }\PYG{n}{size}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{n}{widget}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{sizeHint}\PYG{p}{();}\PYG{+w}{ }\PYG{c+c1}{// const}
\PYG{n}{widget}\PYG{o}{\PYGZhy{}\PYGZgt{}}\PYG{n}{move}\PYG{p}{(}\PYG{l+m+mi}{10}\PYG{p}{,}\PYG{+w}{ }\PYG{l+m+mi}{10}\PYG{p}{);}\PYG{+w}{ }\PYG{c+c1}{// 非 const}
\PYG{err}{\PYGZbs{}}\PYG{n}{end}\PYG{p}{\PYGZob{}}\PYG{n}{lstlisting}\PYG{p}{\PYGZcb{}}

\PYG{n}{代理对象负责处理对另一个对象的绘制工作}\PYG{err}{，}\PYG{n}{它的状态包含了它负责的内容}\PYG{err}{，}\PYG{n}{也就是包含它的绘制目标的状态}\PYG{err}{。}\PYG{n}{请求代理进行绘制是具有副作用的}\PYG{err}{：}\PYG{n}{这会改变正在被绘制的设备的外观}\PYG{err}{（}\PYG{n}{也意味着状态}\PYG{err}{）。}\PYG{n}{正因如此}\PYG{err}{，}\PYG{n}{令}\PYG{+w}{ }\PYG{n}{paint}\PYG{p}{()}\PYG{+w}{ }\PYG{n}{成为}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{并不合理}\PYG{err}{。}\PYG{n}{任何视图控件或}\PYG{+w}{ }\PYG{n}{QIcon}\PYG{+w}{ }\PYG{n}{的}\PYG{+w}{ }\PYG{n}{paint}\PYG{p}{()}\PYG{+w}{ }\PYG{n}{作为}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{都很不合理}\PYG{err}{。}\PYG{n}{没人会在}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{成员函数中去调用}\PYG{+w}{ }\PYG{n}{QIcon}\PYG{o}{::}\PYG{n}{paint}\PYG{p}{()}\PYG{err}{，}\PYG{n}{除非他们明确地像规避当前函数的}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{性质}\PYG{err}{。}\PYG{n}{而在这种场景中}\PYG{err}{，}\PYG{n}{显示的}\PYG{+w}{ }\PYG{k}{const}\PYG{err}{\PYGZbs{}}\PYG{n}{\PYGZus{}cast}\PYG{+w}{ }\PYG{n}{会是更好的选择}\PYG{err}{：}

\PYG{err}{\PYGZbs{}}\PYG{n}{begin}\PYG{p}{\PYGZob{}}\PYG{n}{lstlisting}\PYG{p}{\PYGZcb{}[}\PYG{n}{language}\PYG{o}{=}\PYG{n}{C}\PYG{o}{++}\PYG{p}{]}
\PYG{c+c1}{// QAbstractItemDelegate::paint 是 const}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{QAbstractItemDelegate}\PYG{o}{::}\PYG{n}{paint}\PYG{p}{(}\PYG{n}{QPainter}\PYG{+w}{ }\PYG{o}{*}\PYG{n}{painter}\PYG{p}{,}
\PYG{k}{const}\PYG{+w}{ }\PYG{n}{QStyleOptionViewItem}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{option}\PYG{p}{,}
\PYG{k}{const}\PYG{+w}{ }\PYG{n}{QModelIndex}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{index}\PYG{p}{)}\PYG{+w}{ }\PYG{k}{const}

\PYG{c+c1}{// QGraphicsItem::paint 不是 const}
\PYG{k+kt}{void}\PYG{+w}{ }\PYG{n}{QGraphicsItem}\PYG{o}{::}\PYG{n}{paint}\PYG{p}{(}\PYG{n}{QPainter}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{painter}\PYG{p}{,}
\PYG{k}{const}\PYG{+w}{ }\PYG{n}{QStyleOptionGraphicsItem}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{option}\PYG{p}{,}
\PYG{n}{QWidget}\PYG{+w}{ }\PYG{o}{\PYGZam{}}\PYG{n}{widget}\PYG{+w}{ }\PYG{o}{=}\PYG{+w}{ }\PYG{l+m+mi}{0}\PYG{p}{)}
\PYG{err}{\PYGZbs{}}\PYG{n}{end}\PYG{p}{\PYGZob{}}\PYG{n}{lstlisting}\PYG{p}{\PYGZcb{}}

\PYG{k}{const}\PYG{+w}{ }\PYG{n}{关键字不会为你做任何事}\PYG{err}{，}\PYG{n}{考虑将其移除}\PYG{err}{，}\PYG{n}{而非为一个成员函数提供}\PYG{+w}{ }\PYG{k}{const}\PYG{o}{/}\PYG{n}{非}\PYG{+w}{ }\PYG{k}{const}\PYG{+w}{ }\PYG{n}{的重载版本}\PYG{err}{。}

\end{Verbatim}
